{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\Covid_Tracker\\\\CovidTracker\\\\src\\\\components\\\\Table\\\\Table2.jsx\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst rows = [];\nconst columns = [{\n  id: 'country',\n  label: 'Country',\n  minWidth: 170\n}, {\n  id: 'cases',\n  label: 'Cases',\n  minWidth: 100\n}, {\n  id: 'totalCases',\n  label: 'Total Cases',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'deaths',\n  label: 'Deaths',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'totalDeaths',\n  label: 'Total Deaths',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'recovered',\n  label: 'Recovered',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'totalRecovered',\n  label: 'Total Recovered',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'activeCases',\n  label: 'Active Cases',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'crititcalCases',\n  label: 'Critical Cases',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(country, totalCases, deaths, totalDeaths, recovered, totalRecovered, activeCases, criticalCases) {\n  return {\n    country,\n    totalCases,\n    deaths,\n    totalDeaths,\n    recovered,\n    totalRecovered,\n    activeCases,\n    criticalCases\n  };\n} // const rows = [\n//   createData('India', 'IN', 1324171354, 3287263),\n//   createData('China', 'CN', 1403500365, 9596961),\n//   createData('Italy', 'IT', 60483973, 301340),\n//   createData('United States', 'US', 327167434, 9833520),\n//   createData('Canada', 'CA', 37602103, 9984670),\n//   createData('Australia', 'AU', 25475400, 7692024),\n//   createData('Germany', 'DE', 83019200, 357578),\n//   createData('Ireland', 'IE', 4857000, 70273),\n//   createData('Mexico', 'MX', 126577691, 1972550),\n//   createData('Japan', 'JP', 126317000, 377973),\n//   createData('France', 'FR', 67022000, 640679),\n//   createData('United Kingdom', 'GB', 67545757, 242495),\n//   createData('Russia', 'RU', 146793744, 17098246),\n//   createData('Nigeria', 'NG', 200962417, 923768),\n//   createData('Brazil', 'BR', 210147125, 8515767),\n// ];\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  },\n  tableFont: {\n    fontSize: 15\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const rowz = data.map(country => createData(country.country, country.totalCases, country.deaths, country.todayDeaths, country.recovered, country.todayRecovered, country.active, country.critical));\n        console.log(rowz);\n        const rows = rowz.map();\n      });\n    };\n\n    getCountriesData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    className: classes.tableFont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        className: classes.tableFont,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }));\n}\n;","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/Covid_Tracker/CovidTracker/src/components/Table/Table2.jsx"],"names":["React","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","rows","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","country","totalCases","deaths","totalDeaths","recovered","totalRecovered","activeCases","criticalCases","useStyles","root","width","container","maxHeight","tableFont","fontSize","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","getCountriesData","fetch","then","response","json","data","rowz","map","todayDeaths","todayRecovered","active","critical","console","log","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst rows = [];\r\n\r\nconst columns = [\r\n  { id: 'country', label: 'Country', minWidth: 170 },\r\n  { id: 'cases', label: 'Cases', minWidth: 100 },\r\n  {\r\n    id: 'totalCases',\r\n    label: 'Total Cases',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'deaths',\r\n    label: 'Deaths',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'totalDeaths',\r\n    label: 'Total Deaths',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'recovered',\r\n    label: 'Recovered',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'totalRecovered',\r\n    label: 'Total Recovered',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'activeCases',\r\n    label: 'Active Cases',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'crititcalCases',\r\n    label: 'Critical Cases',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n\r\nfunction createData(country, totalCases, deaths, totalDeaths, recovered, totalRecovered, activeCases, criticalCases) {\r\n  return { country, totalCases, deaths, totalDeaths, recovered, totalRecovered, activeCases, criticalCases };\r\n}\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData('India', 'IN', 1324171354, 3287263),\r\n//   createData('China', 'CN', 1403500365, 9596961),\r\n//   createData('Italy', 'IT', 60483973, 301340),\r\n//   createData('United States', 'US', 327167434, 9833520),\r\n//   createData('Canada', 'CA', 37602103, 9984670),\r\n//   createData('Australia', 'AU', 25475400, 7692024),\r\n//   createData('Germany', 'DE', 83019200, 357578),\r\n//   createData('Ireland', 'IE', 4857000, 70273),\r\n//   createData('Mexico', 'MX', 126577691, 1972550),\r\n//   createData('Japan', 'JP', 126317000, 377973),\r\n//   createData('France', 'FR', 67022000, 640679),\r\n//   createData('United Kingdom', 'GB', 67545757, 242495),\r\n//   createData('Russia', 'RU', 146793744, 17098246),\r\n//   createData('Nigeria', 'NG', 200962417, 923768),\r\n//   createData('Brazil', 'BR', 210147125, 8515767),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  tableFont: {\r\n      fontSize: 15,\r\n  }\r\n});\r\n\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n           const rowz = data.map((country) => (\r\n             createData(country.country, country.totalCases, country.deaths, country.todayDeaths, country.recovered, country.todayRecovered, country.active, country.critical)\r\n            \r\n          ))\r\n          console.log(rowz);\r\n          const rows = rowz.map()\r\n          \r\n         \r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  className={classes.tableFont}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} className={classes.tableFont}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\Covid Tracker\\\\CovidTracker\\\\src\\\\components\\\\HeaderStats\\\\HeaderStats.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport MainStatsCard from '../MainStatsCard/MainStatsCard';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport numeral from \"numeral\";\n\nconst HeaderStats = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  const mildCases = parseInt(countryInfo.active) - parseInt(countryInfo.critical);\n  const casesWithOutcome = parseInt(countryInfo.cases) - parseInt(countryInfo.recovered);\n\n  const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TOTAL ACTIVE CASES\",\n    cases1: prettyPrintStat(countryInfo.active),\n    subheading1: \"Total infected patients\",\n    cases2: countryInfo.critical,\n    subheading2: \"in Mild condition\",\n    cases3: mildCases,\n    subheading3: \"Serious/Critical\",\n    imageUrl: \"https://i.ibb.co/KF1YfN4/calendar.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TOTAL CLOSED CASES\",\n    cases1: prettyPrintStat(casesWithOutcome),\n    subheading1: \"Cases with an outcome\",\n    cases2: countryInfo.recovered,\n    subheading2: \"Recovered\",\n    cases3: countryInfo.deaths,\n    subheading3: \"Deaths\",\n    imageUrl: \"https://i.ibb.co/5KnPmQ4/error.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TODAY ACTIVE CASES\",\n    cases1: prettyPrintStat(countryInfo.todayCases),\n    subheading1: \"Active cases\",\n    cases2: numeral(countryInfo.todayRecovered).format(\"0.0a\"),\n    subheading2: \"Recovered cases\",\n    cases3: numeral(countryInfo.todayDeaths).format(\"0.0a\"),\n    subheading3: \"Deaths\",\n    imageUrl: \"https://i.ibb.co/XCDZppm/shipping-and-delivery.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"CASES PER 1 MILLION\",\n    cases1: prettyPrintStat(countryInfo.casesPerOneMillion),\n    subheading1: \"Cases/1 million\",\n    cases2: numeral(countryInfo.recoveredPerOneMillion).format(\"0.0a\"),\n    subheading2: \"Recovered/1 million\",\n    cases3: numeral(countryInfo.deathsPerOneMillion).format(\"0.0a\"),\n    subheading3: \"Deaths/1 million\",\n    imageUrl: \"https://i.ibb.co/BqG0kcL/orders.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default HeaderStats;","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/Covid Tracker/CovidTracker/src/components/HeaderStats/HeaderStats.jsx"],"names":["React","useState","useEffect","MainStatsCard","Grid","Row","Col","numeral","HeaderStats","countryInfo","setCountryInfo","fetch","then","response","json","data","mildCases","parseInt","active","critical","casesWithOutcome","cases","recovered","prettyPrintStat","stat","format","deaths","todayCases","todayRecovered","todayDeaths","casesPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainStatsCard from '../MainStatsCard/MainStatsCard';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport numeral from \"numeral\";\r\n\r\nconst HeaderStats = () => {\r\n    const [countryInfo, setCountryInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://disease.sh/v3/covid-19/all\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setCountryInfo(data);\r\n          });\r\n    }, []);\r\n\r\n    const mildCases =  parseInt(countryInfo.active)-parseInt(countryInfo.critical);\r\n    const casesWithOutcome = parseInt(countryInfo.cases)-parseInt(countryInfo.recovered);\r\n\r\n    const prettyPrintStat = (stat) =>\r\n            stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n    return(\r\n        <Row>\r\n            <Col lg={3} sm={12}>\r\n              <MainStatsCard\r\n                title= 'TOTAL ACTIVE CASES'\r\n                cases1 = {prettyPrintStat(countryInfo.active)}\r\n                subheading1 = 'Total infected patients'\r\n                cases2 = {countryInfo.critical}\r\n                subheading2 = 'in Mild condition'\r\n                cases3 = {mildCases}\r\n                subheading3 = 'Serious/Critical'\r\n                imageUrl='https://i.ibb.co/KF1YfN4/calendar.png'\r\n              />\r\n            </Col>\r\n            <Col lg={3} sm={12}>\r\n            <MainStatsCard\r\n                title= 'TOTAL CLOSED CASES'\r\n                cases1 = {prettyPrintStat(casesWithOutcome)}\r\n                subheading1 = 'Cases with an outcome'\r\n                cases2 = {countryInfo.recovered}\r\n                subheading2 = 'Recovered'\r\n                cases3 = {countryInfo.deaths}\r\n                subheading3 = 'Deaths'\r\n                imageUrl='https://i.ibb.co/5KnPmQ4/error.png'\r\n              />\r\n            </Col>\r\n            <Col lg={3} sm={12}>\r\n            <MainStatsCard\r\n                title= 'TODAY ACTIVE CASES'\r\n                cases1 = {prettyPrintStat(countryInfo.todayCases)}\r\n                subheading1 = 'Active cases'\r\n                cases2 = {numeral(countryInfo.todayRecovered).format(\"0.0a\")}\r\n                subheading2 = 'Recovered cases'\r\n                cases3 = {numeral(countryInfo.todayDeaths).format(\"0.0a\")}\r\n                subheading3 = 'Deaths'\r\n                imageUrl='https://i.ibb.co/XCDZppm/shipping-and-delivery.png'\r\n              />\r\n            </Col>\r\n            <Col lg={3} sm={12}>\r\n            <MainStatsCard\r\n                title= 'CASES PER 1 MILLION'\r\n                cases1 = {prettyPrintStat(countryInfo.casesPerOneMillion)}\r\n                subheading1 = 'Cases/1 million'\r\n                cases2 = {numeral(countryInfo.recoveredPerOneMillion).format(\"0.0a\")}\r\n                subheading2 = 'Recovered/1 million'\r\n                cases3 = {numeral(countryInfo.deathsPerOneMillion).format(\"0.0a\")}\r\n                subheading3 = 'Deaths/1 million'\r\n                imageUrl='https://i.ibb.co/BqG0kcL/orders.png'\r\n              />\r\n            </Col>\r\n          </Row>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default HeaderStats\r\n"]},"metadata":{},"sourceType":"module"}
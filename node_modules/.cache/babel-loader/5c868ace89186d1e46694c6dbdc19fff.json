{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/react/projects/git_uploads/zah/covid-tracker/src/components/NivoMap/NivoMapContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport MyResponsiveChoropleth from \"./NivoMap\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport \"./nivomap.css\";\n\nconst NivoMapContainer = () => {\n  const [countries, setCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [domainValue, setDomainValue] = useState(5000000);\n  const [colorScheme, setColorScheme] = useState(\"YlOrRd\");\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        if (casesType === \"cases\") {\n          const count = data.map(country => ({\n            id: country.countryInfo.iso3,\n            value: country.cases\n          }));\n          setCountries(count);\n          setDomainValue(200000);\n          setColorScheme(\"YlOrRd\");\n        }\n\n        if (casesType === \"deaths\") {\n          const count = data.map(country => ({\n            id: country.countryInfo.iso3,\n            value: country.deaths\n          }));\n          setCountries(count);\n          setDomainValue(20000);\n          setColorScheme(\"YlOrRd\");\n        }\n\n        if (casesType === \"recovered\") {\n          const count = data.map(country => ({\n            id: country.countryInfo.iso3,\n            value: country.recovered\n          }));\n          setCountries(count);\n          setDomainValue(100000);\n          setColorScheme(\"greens\");\n        }\n\n        console.log(casesType);\n      });\n    };\n\n    getCountriesData();\n  }, [casesType]);\n  console.log(countries);\n\n  const onCaseTypeChange = async e => {\n    setCasesType(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nivomap__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nivomap__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nivomap__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Select Type: \"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"nivomap__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: casesType,\n    onChange: onCaseTypeChange,\n    className: \"nivomap__select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"cases\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"deaths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Deaths\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Recovered\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyResponsiveChoropleth, {\n    data: countries,\n    domainValue: domainValue,\n    colorScheme: colorScheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default NivoMapContainer;","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/react/projects/git_uploads/zah/covid-tracker/src/components/NivoMap/NivoMapContainer.jsx"],"names":["React","useEffect","useState","MyResponsiveChoropleth","MenuItem","FormControl","Select","Card","CardContent","NivoMapContainer","countries","setCountries","casesType","setCasesType","domainValue","setDomainValue","colorScheme","setColorScheme","getCountriesData","fetch","then","response","json","data","count","map","country","id","countryInfo","iso3","value","cases","deaths","recovered","console","log","onCaseTypeChange","e","target","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MyResponsiveChoropleth from \"./NivoMap\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport \"./nivomap.css\";\n\nconst NivoMapContainer = () => {\n  const [countries, setCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [domainValue, setDomainValue] = useState(5000000);\n  const [colorScheme, setColorScheme] = useState(\"YlOrRd\");\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          if (casesType === \"cases\") {\n            const count = data.map((country) => ({\n              id: country.countryInfo.iso3,\n              value: country.cases,\n            }));\n            setCountries(count);\n            setDomainValue(200000);\n            setColorScheme(\"YlOrRd\");\n          }\n          if (casesType === \"deaths\") {\n            const count = data.map((country) => ({\n              id: country.countryInfo.iso3,\n              value: country.deaths,\n            }));\n            setCountries(count);\n            setDomainValue(20000);\n            setColorScheme(\"YlOrRd\");\n          }\n          if (casesType === \"recovered\") {\n            const count = data.map((country) => ({\n              id: country.countryInfo.iso3,\n              value: country.recovered,\n            }));\n            setCountries(count);\n            setDomainValue(100000);\n            setColorScheme(\"greens\");\n          }\n\n          console.log(casesType);\n        });\n    };\n\n    getCountriesData();\n  }, [casesType]);\n\n  console.log(countries);\n\n  const onCaseTypeChange = async (e) => {\n    setCasesType(e.target.value);\n  };\n\n  return (\n    <div className=\"nivomap__container\">\n      <Card>\n        <CardContent>\n          <div className=\"nivomap__header\">\n            <span className=\"nivomap__title\">Select Type: </span>\n            <FormControl className=\"nivomap__dropdown\">\n              <Select\n                variant=\"outlined\"\n                value={casesType}\n                onChange={onCaseTypeChange}\n                className=\"nivomap__select\"\n              >\n                <MenuItem value=\"cases\">Cases</MenuItem>\n                <MenuItem value=\"deaths\">Deaths</MenuItem>\n                <MenuItem value=\"recovered\">Recovered</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div style={{ height: 400 }}>\n            <MyResponsiveChoropleth\n              data={countries}\n              domainValue={domainValue}\n              colorScheme={colorScheme}\n            />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default NivoMapContainer;\n"]},"metadata":{},"sourceType":"module"}
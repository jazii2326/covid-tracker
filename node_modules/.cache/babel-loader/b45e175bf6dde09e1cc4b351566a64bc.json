{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\Covid_Tracker\\\\CovidTracker\\\\src\\\\components\\\\Table\\\\Table3.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport QueueIcon from '@material-ui/icons/Queue';\nimport Search from '@material-ui/icons/Search';\n\nconst Table = props => {\n  const [gridData, setGridData] = useState({\n    data: props.data,\n    columns: props.col,\n    resolve: () => {},\n    updatedAt: new Date()\n  });\n  useEffect(() => {\n    gridData.resolve();\n    console.log(\"RESOLVE AT:\", gridData.updatedAt);\n  }, [gridData]);\n\n  const onRowAdd = newData => new Promise((resolve, reject) => {\n    const data = [...gridData.data];\n    data.push(newData);\n    const updatedAt = new Date();\n    setGridData({ ...gridData,\n      data,\n      updatedAt,\n      resolve\n    });\n  });\n\n  const onRowDelete = oldData => new Promise((resolve, reject) => {\n    let data = [...gridData.data];\n    const index = data.indexOf(oldData);\n    data.splice(index, 1);\n    const updatedAt = new Date();\n    setGridData({ ...gridData,\n      data,\n      updatedAt,\n      resolve\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(props.data), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Your Title\",\n    columns: gridData.columns,\n    data: props.data,\n    editable: {\n      isEditable: rowData => true,\n      isDeletable: rowData => true,\n      onRowAdd: onRowAdd,\n      onRowUpdate: onRowUpdate,\n      onRowDelete: onRowDelete\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/Covid_Tracker/CovidTracker/src/components/Table/Table3.jsx"],"names":["React","useState","useEffect","MaterialTable","QueueIcon","Search","Table","props","gridData","setGridData","data","columns","col","resolve","updatedAt","Date","console","log","onRowAdd","newData","Promise","reject","push","onRowDelete","oldData","index","indexOf","splice","isEditable","rowData","isDeletable","onRowUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAD2B;AAEvCC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,GAFwB;AAGvCC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAHsB;AAIvCC,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJ4B,GAAD,CAAxC;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACK,OAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,QAAQ,CAACM,SAApC;AACD,GAHQ,EAGN,CAACN,QAAD,CAHM,CAAT;;AAKA,QAAMU,QAAQ,GAAGC,OAAO,IACtB,IAAIC,OAAJ,CAAY,CAACP,OAAD,EAAUQ,MAAV,KAAqB;AAC/B,UAAMX,IAAI,GAAG,CAAC,GAAGF,QAAQ,CAACE,IAAb,CAAb;AACAA,IAAAA,IAAI,CAACY,IAAL,CAAUH,OAAV;AACA,UAAML,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,IAAf;AAAqBI,MAAAA,SAArB;AAAgCD,MAAAA;AAAhC,KAAD,CAAX;AACD,GALD,CADF;;AAUA,QAAMU,WAAW,GAAGC,OAAO,IACzB,IAAIJ,OAAJ,CAAY,CAACP,OAAD,EAAUQ,MAAV,KAAqB;AAC/B,QAAIX,IAAI,GAAG,CAAC,GAAGF,QAAQ,CAACE,IAAb,CAAX;AACA,UAAMe,KAAK,GAAGf,IAAI,CAACgB,OAAL,CAAaF,OAAb,CAAd;AACAd,IAAAA,IAAI,CAACiB,MAAL,CAAYF,KAAZ,EAAmB,CAAnB;AACA,UAAMX,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,IAAf;AAAqBI,MAAAA,SAArB;AAAgCD,MAAAA;AAAhC,KAAD,CAAX;AACD,GAND,CADF;;AASA,sBACE,0CAEEG,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACG,IAAlB,CAFF,eAIE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,OAAO,EAAEF,QAAQ,CAACG,OAFpB;AAGE,IAAA,IAAI,EAAEJ,KAAK,CAACG,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRkB,MAAAA,UAAU,EAAEC,OAAO,IAAI,IADf;AAERC,MAAAA,WAAW,EAAED,OAAO,IAAI,IAFhB;AAGRX,MAAAA,QAAQ,EAAEA,QAHF;AAIRa,MAAAA,WAAW,EAAEA,WAJL;AAKRR,MAAAA,WAAW,EAAEA;AALL,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAmBD,CAnDD;;AAqDA,eAAejB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport Search from '@material-ui/icons/Search';\r\n\r\nconst Table = props => {\r\n  const [gridData, setGridData] = useState({\r\n    data: props.data,\r\n    columns: props.col,\r\n    resolve: () => {},\r\n    updatedAt: new Date()\r\n  });\r\n\r\n  useEffect(() => {\r\n    gridData.resolve();\r\n    console.log(\"RESOLVE AT:\", gridData.updatedAt);\r\n  }, [gridData]);\r\n\r\n  const onRowAdd = newData =>\r\n    new Promise((resolve, reject) => {\r\n      const data = [...gridData.data];\r\n      data.push(newData);\r\n      const updatedAt = new Date();\r\n      setGridData({ ...gridData, data, updatedAt, resolve });\r\n    });\r\n\r\n\r\n\r\n  const onRowDelete = oldData =>\r\n    new Promise((resolve, reject) => {\r\n      let data = [...gridData.data];\r\n      const index = data.indexOf(oldData);\r\n      data.splice(index, 1);\r\n      const updatedAt = new Date();\r\n      setGridData({ ...gridData, data, updatedAt, resolve });\r\n    });\r\n\r\n  return (\r\n    <>\r\n    {\r\n      console.log(props.data)\r\n    }\r\n      <MaterialTable\r\n        title=\"Your Title\"\r\n        columns={gridData.columns}\r\n        data={props.data}\r\n        editable={{\r\n          isEditable: rowData => true,\r\n          isDeletable: rowData => true,\r\n          onRowAdd: onRowAdd,\r\n          onRowUpdate: onRowUpdate,\r\n          onRowDelete: onRowDelete\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}